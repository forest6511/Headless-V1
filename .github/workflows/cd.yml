name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v4

      - name: Download JAR
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: backend/build/libs/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      - name: Create Ansible inventory
        run: |
          mkdir -p ansible/inventory
          echo "[servers]" > ansible/inventory/hosts
          echo "${{ secrets.ANSIBLE_HOST }} ansible_user=ubuntu" >> ansible/inventory/hosts

      - name: Deploy to Production
        env:
          ANSIBLE_HOST: ${{ secrets.ANSIBLE_HOST }}
          ANSIBLE_BECOME_PASS: ${{ secrets.ANSIBLE_BECOME_PASS }}
        run: |
          cd ansible
          ansible-playbook playbooks/deploy_app.yml \
            --extra-vars "ansible_become_pass=$ANSIBLE_BECOME_PASS" \
            --private-key ~/.ssh/deploy_key

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Install dependencies of frontend-admin
        run: |
          cd frontend-admin
          npm install

      - name: Build the admin project
        run: |
          cd frontend-admin
          npm run build

      - name: Deploy Admin to Vercel (Prod)
        if: success() && github.event_name == 'pull_request'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend-admin
          npm install -g vercel
          vercel --prod --token $VERCEL_TOKEN --yes

      - name: Install dependencies of frontend-user
        run: |
          cd frontend-user
          npm install

      - name: Build the user project
        run: |
          cd frontend-user
          npm run build

      - name: Deploy User to Vercel (Preview)
        if: success() && github.event_name == 'pull_request'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend-user
          npm install -g vercel
          vercel --prod --token $VERCEL_TOKEN --yes