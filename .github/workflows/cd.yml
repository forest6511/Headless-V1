name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: headblog
          POSTGRES_PASSWORD: headblog
          POSTGRES_DB: headblog-test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U headblog -d headblog-test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Create log directory
        run: |
          sudo mkdir -p ${{ secrets.BACKEND_LOG_DIR }}
          sudo chown $USER:$USER ${{ secrets.BACKEND_LOG_DIR }}

      - name: Set environment variables for testing only
        run: |
          echo "DB_URL=jdbc:postgresql://localhost:5432/headblog-test" >> $GITHUB_ENV
          echo "DB_USER=headblog" >> $GITHUB_ENV
          echo "DB_PASSWORD=headblog" >> $GITHUB_ENV
          echo "DB_SCHEMA=public" >> $GITHUB_ENV

      - name: Build Spring Boot application
        run: ./gradlew build

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      - name: Create Ansible inventory
        run: |
          mkdir -p ansible/inventory
          echo "[servers]" > ansible/inventory/hosts
          echo "${{ secrets.ANSIBLE_HOST }} ansible_user=ubuntu" >> ansible/inventory/hosts

      - name: Deploy to Production
        env:
          ANSIBLE_HOST: ${{ secrets.ANSIBLE_HOST }}
          ANSIBLE_BECOME_PASS: ${{ secrets.ANSIBLE_BECOME_PASS }}
        run: |
          cd ansible
          ansible-playbook playbooks/deploy_app.yml \
            --extra-vars "ansible_become_pass=$ANSIBLE_BECOME_PASS" \
            --private-key ~/.ssh/deploy_key