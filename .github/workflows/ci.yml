name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: headblog
          POSTGRES_PASSWORD: headblog
          POSTGRES_DB: headblog-test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U headblog -d headblog-test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Set environment variables
        run: |
          echo "DB_URL=jdbc:postgresql://localhost:5432/headblog-test" >> $GITHUB_ENV
          echo "DB_USER=headblog" >> $GITHUB_ENV
          echo "DB_PASSWORD=headblog" >> $GITHUB_ENV
          echo "DB_SCHEMA=public" >> $GITHUB_ENV

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run tests
        env:
          SPRING_PROFILES_ACTIVE: test
        run: ./gradlew test

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Install dependencies of frontend-admin
        run: |
          cd frontend-admin
          npm install

      - name: Build the admin project
        run: |
          cd frontend-admin
          npm run build

      - name: Deploy Admin to Vercel (Preview)
        if: success() && github.event_name == 'pull_request'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend-admin
          npm install -g vercel
          vercel build --prod --yes

      - name: Install dependencies of frontend-user
        run: |
          cd frontend-user
          npm install

      - name: Build the user project
        run: |
          cd frontend-user
          npm run build

      - name: Deploy User to Vercel (Preview)
        if: success() && github.event_name == 'pull_request'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          cd frontend-user
          npm install -g vercel
          vercel --token $VERCEL_TOKEN --yes